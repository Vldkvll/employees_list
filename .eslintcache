[{"C:\\mywork\\pet\\employe_list\\src\\index.js":"1","C:\\mywork\\pet\\employe_list\\src\\App.jsx":"2","C:\\mywork\\pet\\employe_list\\src\\components\\index.js":"3","C:\\mywork\\pet\\employe_list\\src\\components\\Employess\\Employess.jsx":"4","C:\\mywork\\pet\\employe_list\\src\\components\\Jobs\\Jobs.jsx":"5","C:\\mywork\\pet\\employe_list\\src\\components\\modules\\api\\api.js":"6","C:\\mywork\\pet\\employe_list\\src\\components\\modules\\api\\endpoints.js":"7","C:\\mywork\\pet\\employe_list\\src\\redux\\store.js":"8","C:\\mywork\\pet\\employe_list\\src\\redux\\actions\\actions.js":"9","C:\\mywork\\pet\\employe_list\\src\\redux\\reducer\\reducer.js":"10"},{"size":276,"mtime":1613258237341,"results":"11","hashOfConfig":"12"},{"size":220,"mtime":1611007034524,"results":"13","hashOfConfig":"12"},{"size":111,"mtime":1611006926662,"results":"14","hashOfConfig":"12"},{"size":173,"mtime":1611006833803,"results":"15","hashOfConfig":"12"},{"size":846,"mtime":1613261632579,"results":"16","hashOfConfig":"12"},{"size":636,"mtime":1612211786426,"results":"17","hashOfConfig":"12"},{"size":252,"mtime":1612211782586,"results":"18","hashOfConfig":"12"},{"size":604,"mtime":1613262820497,"results":"19","hashOfConfig":"12"},{"size":612,"mtime":1613180257341,"results":"20","hashOfConfig":"12"},{"size":2214,"mtime":1613258878839,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89zddt",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\mywork\\pet\\employe_list\\src\\index.js",[],"C:\\mywork\\pet\\employe_list\\src\\App.jsx",[],["43","44"],"C:\\mywork\\pet\\employe_list\\src\\components\\index.js",[],"C:\\mywork\\pet\\employe_list\\src\\components\\Employess\\Employess.jsx",[],"C:\\mywork\\pet\\employe_list\\src\\components\\Jobs\\Jobs.jsx",["45","46"],"C:\\mywork\\pet\\employe_list\\src\\components\\modules\\api\\api.js",[],"C:\\mywork\\pet\\employe_list\\src\\components\\modules\\api\\endpoints.js",[],"C:\\mywork\\pet\\employe_list\\src\\redux\\store.js",["47"],"C:\\mywork\\pet\\employe_list\\src\\redux\\actions\\actions.js",[],"C:\\mywork\\pet\\employe_list\\src\\redux\\reducer\\reducer.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":11,"column":15,"nodeType":"54","endLine":21,"endColumn":6},{"ruleId":"52","severity":1,"message":"55","line":21,"column":8,"nodeType":"56","endLine":21,"endColumn":10,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":23,"nodeType":"60","messageId":"61","endLine":1,"endColumn":38},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [dispatch]",{"range":"67","text":"68"},[719,721],"[dispatch]"]